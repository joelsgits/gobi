sample_information<- "/Users/User/Documents/Gobi/sample_information.txt"
sample_information<-read.table(sample_information, header = TRUE, row.names = 1)
count_table<-"/Users/User/Documents/Gobi/count_matrix.txt"
count_matrix<- count_table
count_matrix<-"/Users/User/Documents/Gobi/count_matrix.txt"
sample_information<- "/Users/User/Documents/Gobi/sample_information.txt"
sample_information<-read.table(sample_information, header = TRUE, row.names = 1)
View(sample_information)
count_matrix<- read.table(count_matrix, header = TRUE)
View(count_matrix)
count_matrix <- count_matrix %>%
tibble::column_to_rownames(var="GeneID") %>%
as.matrix()
count_matrix <- count_matrix
tibble::column_to_rownames(var="GeneID")
count_matrix <- count_matrix %>%
tibble::column_to_rownames(var="GeneID") %>%
as.matrix()
count_matrix <- count_matrix %>%
tibble::column_to_rownames(var="GeneID")
count_matrix <- count_matrix
tibble::column_to_rownames(var="GeneID") %>%
as.matrix()
count_matrix <- count_matrix
tibble::column_to_rownames(var="GeneID")
install.packages("data.table")
install.packages("dplyr")
install.packages("RColorBrewer")
install.packages("ggplot2")
install.packages("ggVennDiagram")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("pcaMethods")
library(data.table)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(ggVennDiagram)
library(pcaMethods)
library(edgeR)
library(limma)
library(DESeq2)
library(SummarizedExperiment)
count_matrix <- count_matrix %>%
tibble::column_to_rownames(var="GeneID") %>%
as.matrix()
count_matrix <- data.table::fread("count_matrix.txt", data.table = FALSE)
count_matrix <- data.table::fread("/Users/User/Documents/Gobi/count_matrix.txt", data.table = FALSE)
pd <- data.table::fread("/Users/User/Documents/Gobi/sample_information.txt", data.table = FALSE)
count_matrix <- count_matrix %>%
tibble::column_to_rownames(var="GeneID") %>%
as.matrix()
d0 <- edgeR::DGEList(counts = count_matrix,lib.size = 40, group = pd)
d0 <- edgeR::DGEList(lib.size = 40, group = pd)
count_matrix
count_matrix[1,]
d0 <- edgeR::DGEList(counts = count_matrix[1,],lib.size = 40, group = pd)
d0 <- edgeR::DGEList(counts = count_matrix[1,], group = pd)
d0 <- edgeR::DGEList(counts = count_matrix[1,], group = pd[,1])
pd[,1]
pd[,2]
d0 <- edgeR::DGEList(counts = count_matrix[,1], group = pd[,2])
count_matrix[,1]
d0 <- edgeR::DGEList(counts = count_matrix[1,], group = pd[,2])
pd[,2]
count_matrix[1,]
value(count_matrix[1,])
value.count_matrix[1,]
d0 <- edgeR::DGEList(counts = count_matrix[1,])
d0
d0 <- edgeR::DGEList(counts = count_matrix, group = pd[,2])
d0
cpm <- edgeR::cpm(d0)
cpm
cpm[1:5,1:5]
d0$lib.size
cpm$lib.size
package_size(cpm)
if (!requireNamespace("utils", quietly = TRUE)) {
install.packages("utils")
}
# Load the 'utils' package
library(utils)
package_size(cpm)
if (!requireNamespace("utils", quietly = TRUE)) {
+     install.packages("utils")
lib.size(cpm)
cpm.lib.size
cpm[lib.size]
install.packages("data.table")
install.packages("dplyr")
install.packages("RColorBrewer")
install.packages("ggplot2")
install.packages("ggVennDiagram")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("pcaMethods")
library(data.table)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(ggVennDiagram)
library(pcaMethods)
library(edgeR)
library(limma)
library(DESeq2)
library(SummarizedExperiment)
lib.size(cpm)
dim(cpm[,1])
dim[1,]
cpm
lcpm <- edgeR::cpm(cpm)
lcpm[1:5,1:5]
lcpm <- edgeR::cpm(d0)
lcpm <- edgeR::cpm(cpm)
lcpm[1:5,1:5]
lcpm <- edgeR::cpm(d0, log = TRUE)
lcpm[1:5,1:5]
rowSums(d0, na.rm = FALSE)
rowSums(d0$counts, na.rm = FALSE)
rowSums(d0$counts, na.rm = FALSE)== 0
sum(rowSums(d0$counts, na.rm = FALSE)== 0)
L <- mean(d0$samples$lib.size) * 1e-6
M <- median(d0$samples$lib.size) * 1e-6
lcpm.cutoff <- log2(10/M + 2/L)
nsamples <- ncol(d0)
col <- brewer.pal(nsamples, "Paired")
plot(density(lcpm[,1]), col=col[1], lwd=2, ylim=c(0,0.7), las=2, main="", xlab="Log-cpm")
abline(v=lcpm.cutoff, lty=3)
for (i in 2:nsamples){
den <- density(lcpm[,i])
L <- mean(d0$samples$lib.size) * 1e-6
M <- median(d0$samples$lib.size) * 1e-6
lcpm.cutoff <- log2(10/M + 2/L)
nsamples <- ncol(d0)
col <- brewer.pal(nsamples, "Paired")
plot(density(lcpm[,1]), col=col[1], lwd=2, ylim=c(0,0.7), las=2, main="", xlab="Log-cpm")
abline(v=lcpm.cutoff, lty=3)
for (i in 2:nsamples){
den <- density(lcpm[,i])
lines(den$x, den$y, col=col[i], lwd=2)
}
L <- mean(d0$samples$lib.size) * 1e-6
M <- median(d0$samples$lib.size) * 1e-6
lcpm.cutoff <- log2(10/M + 2/L)
nsamples <- ncol(d0)
col <- brewer.pal(nsamples, "Paired")
plot(density(lcpm[,1]), col=col[1], lwd=2, ylim=c(0,0.7), las=2, main="", xlab="Log-cpm")
abline(v=lcpm.cutoff, lty=3)
for (i in 2:nsamples){
den <- density(lcpm[,i])lines(den$x, den$y, col=col[i], lwd=2)
L <- mean(d0$samples$lib.size) * 1e-6
M <- median(d0$samples$lib.size) * 1e-6
lcpm.cutoff <- log2(10/M + 2/L)
nsamples <- ncol(d0)
col <- brewer.pal(nsamples, "Paired")
plot(density(lcpm[,1]), col=col[1], lwd=2, ylim=c(0,0.7), las=2, main="", xlab="Log-cpm")
abline(v=lcpm.cutoff, lty=3)
for (i in 2:nsamples){
den <- density(lcpm[,i])lines(den$x, den$y, col=col[i], lwd=2)
L <- mean(d0$samples$lib.size) * 1e-6
M <- median(d0$samples$lib.size) * 1e-6
lcpm.cutoff <- log2(10/M + 2/L)
nsamples <- ncol(d0)
col <- brewer.pal(nsamples, "Paired")
plot(density(lcpm[,1]), col=col[1], lwd=2, ylim=c(0,0.7), las=2, main="", xlab="Log-cpm")
abline(v=lcpm.cutoff, lty=3)
for (i in 2:nsamples){
den <- density(lcpm[,i])
lines(den$x, den$y, col=col[i], lwd=2)
}
